spring:
  shardingsphere:
    datasource:
      names: ds0,ds1
      ds0:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://192.168.208.128:3306/sharding?useUnicode=true&characterEncoding=UTF-8&serverTimezone=GMT%2B8&useSSL=false
        username: root
        password: root
      ds1:
        type: com.alibaba.druid.pool.DruidDataSource
        driver-class-name: com.mysql.cj.jdbc.Driver
        url: jdbc:mysql://192.168.208.128:3306/sharding1?useUnicode=true&characterEncoding=UTF-8&serverTimezone=GMT%2B8&useSSL=false
        username: root
        password: root
    sharding:
      tables:
        user:
          # 指定表的分布情况 配置表在哪个数据库里，表名是什么。水平分表，分两个表：test.course_1,test.course_2
          actual-data-nodes: ds$->{0..1}.user_$->{0..1}
          # 指定表的主键生成策略
          key-generator:
            column: id
            type: SNOWFLAKE
            props.worker.id: 1 #雪花算法的一个可选参数
          # 指定分片策略 约定cid值为偶数添加到course_1表。如果是奇数添加到course_2表。
          table-strategy.inline:
            sharding-column: age # 根据计算的字段算出对应的表名。
            algorithm-expression: user_$->{age % 2}
          database-strategy.inline:
            sharding-column: id
            algorithm-expression: ds$->{id % 2}
      # 默认分库策略
#      default-database-strategy:
#        inline:
#          sharding-column: id
#          algorithm-expression: ds$->{id % 2}
    props:
      sql:
        show: true
  main:
    allow-bean-definition-overriding: true
